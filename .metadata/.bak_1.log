!SESSION 2021-12-08 02:29:13.899 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/junior/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/junior/.eclipse_keyring

This is a continuation of log file /Users/junior/Desktop/JAVA LPA/.metadata/.bak_0.log
Created Time: 2021-12-08 09:51:07.408

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:51:07.409
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:51:07.414
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:08.937
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:51:08.941
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:51:08.942
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:10.276
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:51:10.277
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:51:10.278
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:14.814
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:51:14.815
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:51:14.816
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:18.884
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:51:18.887
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:51:18.888
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:27.377
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:51:27.378
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:51:27.378
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:27.404
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:51:27.407
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:51:27.408
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:40.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:51:40.196
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:51:40.196
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:48.270
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:51:48.272
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:51:48.274
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:51:51.313
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:51:51.314
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:51:51.314
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:00.147
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:00.154
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:00.155
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:07.375
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:07.376
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:07.377
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:10.473
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:10.474
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:10.474
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:11.496
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:11.497
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:11.497
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:13.533
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:13.534
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:13.537
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:14.312
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:14.314
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:14.316
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:20.615
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:20.617
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:20.618
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:22.909
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:22.910
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:22.911
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:25.725
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:25.726
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:25.726
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:26.509
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:26.510
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:26.511
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:33.745
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:33.746
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:33.747
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:34.772
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:34.777
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:34.778
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:36.305
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[1][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:36.306
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:36.306
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:37.850
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:37.851
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:37.851
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:39.924
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:39.925
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:39.926
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:45.224
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:45.226
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:45.226
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:49.976
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linh
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:49.977
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:49.977
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:50.997
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:50.998
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:50.999
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:53.547
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:53.553
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:53.554
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:56.607
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:52:56.615
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:52:56.616
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:52:57.782
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:52:57.783
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:52:57.783
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:00.133
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:00.133
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:00.135
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:02.177
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:02.178
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:02.180
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:04.729
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:04.730
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:04.731
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:07.789
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:07.791
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:07.792
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:09.356
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:09.357
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:09.364
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:14.859
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:14.860
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:14.860
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:16.396
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:16.397
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:16.400
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:17.418
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:17.419
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:17.420
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:18.939
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:18.940
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:18.941
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:22.285
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:22.286
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:22.287
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:26.500
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:26.503
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:26.503
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:29.553
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:29.554
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:29.554
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:32.596
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:32.597
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:32.599
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:35.638
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:35.639
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:35.639
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:35.679
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:35.680
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:35.681
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:39.284
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:39.285
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:39.285
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:40.704
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:40.705
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:40.705
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:43.787
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:43.789
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:43.790
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:46.271
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:46.272
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:46.273
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:51.326
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:53:51.328
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:53:51.328
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:51.372
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:51.373
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:51.373
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:53:51.811
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:53:51.812
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:53:51.812
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:54:00.058
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:54:00.061
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:54:00.061
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:54:00.080
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:54:00.081
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:54:00.081
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:54:15.650
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:54:15.651
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:54:15.652
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:54:20.599
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:54:20.600
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:54:20.601
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:54:20.662
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:54:20.663
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:54:20.664
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:56:31.791
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor68.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1108)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4436)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1549)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1545)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:522)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1085)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6246)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:59)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:606)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6078)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:235)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2150)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2487)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6198)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5442)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5585)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:117)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3834)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:56:31.792
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor68.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1108)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4436)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1549)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1545)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:522)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1085)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6246)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:59)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:606)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6078)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:235)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2150)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2487)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6198)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5442)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5585)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:117)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3834)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:56:31.793
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor68.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1108)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4436)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1549)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1545)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:522)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1085)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6246)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:59)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:606)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6078)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:235)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2150)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2487)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6198)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5442)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5585)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:117)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3834)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:56:33.808
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        Vencedor(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:56:33.809
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:56:33.810
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:56:46.262
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
     
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:56:46.265
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:56:46.266
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:56:56.377
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
     
        seq = turno2(seq);
       
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:56:56.380
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:56:56.380
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:57:03.958
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
     
        seq = turno2(seq);
    
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-08 09:57:03.958
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-08 09:57:03.960
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-08 09:57:05.102
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package terceiraAtividadeAvaliativa;

import java.util.*;

public class JogosAtividadeLPA {
    static int escolhaDoUsuario;
    static String nomeUsuario;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        imprimir("Informe o seu nome: ");
        nomeUsuario = sc.nextLine();

        System.out.printf("\n%s, escolha o seu jogo: [1] Jogo da velha [2] Jogo da forca: ", nomeUsuario);
        escolhaDoUsuario = sc.nextInt();

        if(escolhaDoUsuario == 1){
            System.out.print("");
            daVelha();
        }else if(escolhaDoUsuario == 2){
            jogoDaForca();
        }else{
            System.out.print("Escolha de jogo inválida");
        }




    }

    public static char[][] daVelha() {
        char[][] seq = new char[3][3];
        char[][] seqBackup = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                seq[i][j] = '-';
            }
        }
        seqBackup = seq; //um backup pra receber a tabela zerada;


        imprimir(seq);
        System.out.println("");
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        imprimir(seq);
        seq = turno2(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
     
        seq = turno2(seq);
    
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno2(seq);
        Vencedor(seq);
        imprimir(seq);
        seq = turno1(seq);
        Vencedor(seq);
        imprimir(seq);
        
       return seq; 
    }

    public static char[][] turno1(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 1°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'x';

        return jogo;
    }

    public static char[][] turno2(char[][] jogo){
        Scanner tec1 = new Scanner(System.in);
        int pos1,pos2;
        imprimir("Jogador 2°, digite a linha e a coluna que deseja colocar sua marcação: ");
        imprimir("Linha:");
        pos1 = tec1.nextInt();
        imprimir("Coluna:");
        pos2 = tec1.nextInt();

        jogo[pos1-1][pos2-1] = 'o';

        return jogo;
    }

    public static boolean posicoes(int pos){

        return false;
    }
    
    public static void Vencedor1(char[][]seq) {
    	
    	if (seq[0][0]=='x'&&seq[1][0]=='x' && seq[2][0]=='x')||//coluna
    	(seq[0][1]=='x'&&seq[1][1]=='x' && seq[2][1]=='x')||//coluna
    	(seq[0][2]=='x'&&seq[1][2]=='x' && seq[2][2]=='x')||//coluna
    	(seq[0][0]=='x'&&seq[0][1]=='x' && seq[0][2]=='x')||//linha
    	(seq[1][0]=='x'&&seq[1][1]=='x' && seq[1][2]=='x')||//linha
    	(seq[2][0]=='x'&&seq[2][1]=='x' && seq[2][2]=='x')||//linha
    	(seq[0][0]=='x'&&seq[1][1]=='x' && seq[2][2]=='x')||//diagonal
    	(seq[2][0]=='x'&&seq[1][1]=='x' && seq[0][2]=='x')||//diagonal
    	{
    		System.out.print("Jogador 1 venceu");
    		
    	}
    	
    }

    // JOGO DA FORCA


    public static void jogoDaForca() {
        Scanner teclado = new Scanner(System.in);

        String[] frases = {"borboleta", "cachorro", "passarinho", "flor"};
        int index = new Random().nextInt(3);
        String palavraSelecionada = frases[index];

        char[] traco = new char[palavraSelecionada.length()];
        for (int i = 0; i < palavraSelecionada.length(); i++) {
            traco[i] = '_';
        }

        int palavraString = frases[index].length();
        int tentativa = 6;

        while (palavraString > 0 && tentativa > 0) {
            enforcado(6-tentativa);
            for (int i = 0; i < palavraSelecionada.length(); i++) {
                System.out.print(" " + traco[i] + "  ");
            }
            System.out.println("");

            System.out.println("Você tem  " + tentativa + "  chances de adivinhar");
            System.out.println("A palavra tem " + palavraString + " letras restantes");
            System.out.println("Digite uma letra: ");

            char letra = teclado.next().charAt(0);
            char letras = Character.toLowerCase(letra);
            boolean letraCorreta = false;

            for (int i = 0; i < traco.length; i++) {

                if (frases[index].charAt(i) == letras) {
                    traco[i] = letras;
                    palavraString--;
                    letraCorreta = true;
                }
            }

            if (!letraCorreta) {
                tentativa--;
            }
        }

        if (palavraString == 0) {
            System.out.println(" PARABENS! Você Acertou a palavra! ");
        } else {
            enforcado(6);
            System.out.println("Infelizmente Você Errou ");
            System.out.println("A palavra era " + palavraSelecionada);
        }
    }

    public static void enforcado(int num) {
        switch(num) {
            case 0: System.out.println(" ______________\n|              |\n|              |\n|              \n|               \n|               \n|               \n|               \n|");break;
            case 1: System.out.println(" ______________\n|              |\n|              |\n|              o\n|               \n|               \n|               \n|               \n|");break;
            case 2: System.out.println(" ______________\n|              |\n|              |\n|              o\n|              |\n|                \n|               \n|              \n|");break;
            case 3: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\n|                \n|               \n|              \n|");break;
            case 4: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|               \n|               \n|              \n|");break;
            case 5: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             /\n|               \n|              \n|");break;
            case 6: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");break;
            default: System.out.println(" ______________\n|              |\n|              |\n|              o\n|             /|\\\n|             / \\\n|               \n|              \n|");
        }
    }

    // metodos basicos:

    public static void imprimir(char[][] v) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("|" + v[i][j]);
            }
            System.out.println("|\n");
        }
    }

    public static void imprimir(String arg) {
        System.out.println(arg);
    }
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-08 09:57:05.104
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-08 09:57:05.104
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2022)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
